version: '2'
services:
  agent:
    image: inspectit/inspectit-ocelot-agent:${INSPECTIT_OCELOT_VERSION}
    container_name: agent
    mem_limit: 128M
    volumes:
      - agent-vol:/agent
      
  ocelot-config-server:
    image: inspectit/inspectit-ocelot-configurationserver:${INSPECTIT_OCELOT_VERSION}
    container_name: ocelot-config-server
    mem_limit: 128M
    environment:
      - INSPECTIT_WORKING_DIRECTORY=/configuration-server
      - INSPECTIT_DEFAULT_USER_PASSWORD=demo
    volumes:
      - ./configuration-server:/configuration-server
    ports:
      - 8090:8090

  config-server:
    image: openapm/spring-petclinic-config-server:inspectit-oce-demo
    container_name: config-server
    depends_on:
      - ocelot-config-server
      - agent
    environment:
      - INSPECTIT_SERVICE_NAME=config-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9096
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger:14268/api/traces
    mem_limit: 512M
    entrypoint: ["sh", "-c","
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8888:8888
      - 9096:9096

  discovery-server:
    image: openapm/spring-petclinic-discovery-server:inspectit-oce-demo
    container_name: discovery-server
    environment:
      - INSPECTIT_SERVICE_NAME=discovery-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9095
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger:14268/api/traces
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8761:8761
      - 9095:9095

  customers-service:
    image: openapm/spring-petclinic-customers-service:inspectit-oce-demo
    container_name: customers-service
    environment:
      - INSPECTIT_SERVICE_NAME=customers-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9091
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger:14268/api/traces
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8081:8081
      - 9091:9091

  visits-service:
    image: openapm/spring-petclinic-visits-service:inspectit-oce-demo
    container_name: visits-service
    environment:
      - INSPECTIT_SERVICE_NAME=visits-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9092
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger:14268/api/traces
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8082:8082
      - 9092:9092

  vets-service:
    image: openapm/spring-petclinic-vets-service:inspectit-oce-demo
    container_name: vets-service
    environment:
      - INSPECTIT_SERVICE_NAME=vets-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9093
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger:14268/api/traces
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8083:8083
      - 9093:9093

  api-gateway:
    image: openapm/spring-petclinic-api-gateway:inspectit-oce-demo
    container_name: api-gateway
    environment:
      - INSPECTIT_SERVICE_NAME=api-gateway
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9094
      - INSPECTIT_EXPORTERS_TRACING_JAEGER_URL=http://jaeger:14268/api/traces
    mem_limit: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - config-server
      - discovery-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 -timeout=120s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8080:8080
      - 9094:9094

  load:
    image: inspectit/spring-petclinic-load:1.0
    container_name: load-generator

  jaeger:
    image: jaegertracing/all-in-one:1.6
    container_name: jaeger
    ports:
      - 16686:16686
  prometheus:
    image: prom/prometheus:v2.7.1
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    build: ./grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=demo
      - GF_PATHS_PROVISIONING=/usr/share/grafana/custom/
    volumes:
      - ./grafana/provisioning/grafana-tracing:/usr/share/grafana/custom/
    ports:
      - 3001:3000
volumes:
  agent-vol:
